% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/beta-functions.R
\name{lmbeta}
\alias{lmbeta}
\title{Natural Logarithm of the Multivariate Beta Function}
\usage{
lmbeta(x)
}
\arguments{
\item{x}{A numeric vector of non-negative values.}
}
\value{
If all elements of \code{x} are greater than zero then \code{lmbeta} returns a numeric vector of \code{\link[base]{length}} 1. If any element of \code{x} is equal to zero then \code{lmbeta} returns \code{inf}.
}
\description{
\loadmathjax Underflow-robust implementation of the natural logarithm of the multivariate Beta function.
}
\details{
Consider the numeric vector \mjeqn{x = (x_1, ..., x_k)}{x = (x_1, ..., x_k)} with \mjeqn{x_i > 0 \, \forall i \in \lbrace 1, \dots, k \rbrace}{x_i > 0 for all i in \{1, ..., k \}}. The multivariate Beta function is defined as:

\mjdeqn{\operatorname{B}(x) = \prod_{i=1}^{k} \Gamma (x_i) \Big/ \Gamma \left(\sum_{i=1}^{k} x_i \right)}{B(x) = product_{i=1}^{k} Gamma(x_i) / Gamma(sum_{i=1}^{k} x_i)}

where \mjeqn{\Gamma}{Gamma} is the Gamma function. Taking the natural logarithm of both sides in the latter equation we obtain:

\mjdeqn{\operatorname{log} \operatorname{B}(x) = \sum_{i=1}^{k}{\operatorname{log} \, \Gamma(x_i)} - \operatorname{log} \, \Gamma \left(\sum_{i = 1}^{k}x_i\right)}{log B(x) = sum_{i=1}^{k}logGamma(x_i) - logGamma(sum_{i = 1}^{k} x_i)}

With this formula we can take advantage of the underflow-robust \code{\link[base]{lgamma}} function. Note that \mjeqn{\operatorname{B}(x)}{B(x)} is only defined in \mjeqn{\Re}{R} if all elements of \code{x} are greater than zero and is infinite if any element of \code{x} is equal to zero \insertCite{becker1972}{polya}.
}
\examples{
lmbeta(c(1, 1)) # same as lbeta(1,1)
lmbeta(c(1, 1, 1))
lmbeta(c(1, 2, 4))
lmbeta(rep(0.5, 10))
lmbeta(1:5)

}
\references{
\insertAllCited{}
}
\seealso{
\itemize{
\item \code{\link[polya]{lmbeta}} for an underflow-robust implementation of the natural logarithm of the Beta function.
}
}
